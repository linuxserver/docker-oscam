---

# project information
project_name: oscam
project_url: "http://www.streamboard.tv/oscam/"
project_logo: "http://download.oscam.cc/images/Logo.png"
project_blurb: "[{{ project_name|capitalize }}]({{ project_url }}) is an Open Source Conditional Access Module software used for descrambling DVB transmissions using smart cards. It's both a server and a client."
project_lsio_github_repo_url: "https://github.com/linuxserver/docker-{{ project_name }}"
project_blurb_optional_extras_enabled: false

# supported architectures
available_architectures:
  - { arch: "{{ arch_x86_64 }}", tag: "amd64-latest"}
  - { arch: "{{ arch_arm64 }}", tag: "arm64v8-latest"}
  - { arch: "{{ arch_armhf }}", tag: "arm32v7-latest"}

# development version
development_versions: false

# container parameters
common_param_env_vars_enabled: true
param_container_name: "{{ project_name }}"
param_usage_include_net: false
param_usage_include_env: true
param_env_vars:
  - { env_var: "TZ", env_value: "Europe/London", desc: "Specify a timezone to use EG Europe/London." }
param_usage_include_vols: true
param_volumes:
  - { vol_path: "/config", vol_host_path: "<path to data>", desc: "Where oscam should store config files and logs." }
param_usage_include_ports: true
param_ports:
  - { external_port: "8888", internal_port: "8888", port_desc: "WebUI" }
param_device_map: true
param_devices:
  - { device_path: "/dev/ttyUSB0", device_host_path: "/dev/ttyUSB0", desc: "For passing through smart card readers." }
cap_add_param: false

# optional container parameters
opt_param_usage_include_env: false
opt_param_usage_include_vols: false
opt_param_usage_include_ports: false
opt_param_device_map: false
opt_cap_add_param: false
optional_block_1: true
optional_block_1_items:
  - |
    ### Passing through Smart Card Readers

    If you want to pass through a smart card reader, you need to specify the reader with the `--device=` tag. The method used depends on how the reader is recognized.
    The first is /dev/ttyUSBX. To find the correct device, connect the reader and run `dmesg | tail` on the host. In the output you will find /dev/ttyUSBX, where X is the number of the device. If this is the first reader you connect to your host, it will be /dev/ttyUSB0. If you add one more it will be /dev/ttyUSB1.

    If there are no /dev/ttyUSBX device in `dmesg | tail`, you have to use the USB bus path. It will look similar to the below.

    `/dev/bus/usb/001/001`

    The important parts are the two numbers in the end. The first one is the Bus number, the second is the Device number. To find the Bus and Device number you have to run `lsusb` on the host, then find your USB device in the list and note the Bus and Device numbers.

    Here is an example of how to find the Bus and Device. The output of the lsusb command is below.

    `Bus 002 Device 005: ID 076b:6622 OmniKey AG CardMan 6121`

    The first number, the Bus, is 002. The second number, the Device, is 005. This will look like below in the `--device=` tag.

    `--device=/dev/bus/usb/002/005`

    If you have multiple smart card readers, you add one `--device=` tag for each reader.

# application setup block
app_setup_block_enabled: true
app_setup_block: |
  To set up oscam there are numerous guides on the internet. There are too many scenarios to make a quick guide.
  The web interface is at port 8888.

# changelog
changelogs:
  - { date: "28.04.19:", desc: "Switch back to streamboard svn to fix version not showing in UI." }
  - { date: "23.03.19:", desc: "Switching to new Base images, shift to arm32v7 tag." }
  - { date: "19.02.19:", desc: "Add pipeline logic and multi arch, rebase to Alpine 3.8." }
  - { date: "03.01.18:", desc: "Deprecate cpu_core routine lack of scaling." }
  - { date: "13.12.17:", desc: "Rebase to alpine 3.7." }
  - { date: "19.10.17:", desc: "Add ccid package for usb card readers." }
  - { date: "17.10.17:", desc: "Switch to using bzr for source code, streamboard awol." }
  - { date: "28.05.17:", desc: "Rebase to alpine 3.6." }
  - { date: "09.02.17:", desc: "Rebase to alpine 3.5." }
  - { date: "14.10.16:", desc: "Add version layer information." }
  - { date: "02.10.16:", desc: "Add info on passing through devices to README." }
  - { date: "25.09.16:", desc: "Initial release." }
